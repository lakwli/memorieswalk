# MemoriesWalk Production Docker Compose Configuration
# This file should be placed in /opt/memorieswalk/ and renamed to docker-compose.yml

version: "3.8"

# Load environment variables from server.env for the whole docker-compose file
# This makes ${DB_USER}, ${DB_PASSWORD}, etc. available to all services
env_file:
  - /opt/memorieswalk/env/server.env

services:
  app:
    container_name: memorieswalk-prod
    image: ghcr.io/your-github-username/your-repo-name:latest # REPLACE THIS with your actual repository
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - /opt/memorieswalk/data/file_storage:/app/server/file_storage
    env_file:
      - /opt/memorieswalk/env/server.env
      - /opt/memorieswalk/env/frontend.env
    depends_on:
      - postgres
    networks:
      - memorieswalk-network

  postgres:
    image: postgres:latest
    container_name: memorieswalk-postgres-prod
    restart: always
    # Use environment variables that match the DB_ variables in server.env
    # This is a special Docker Compose feature that gets env variables from .env files
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - /opt/memorieswalk/data/postgres:/var/lib/postgresql/data
    networks:
      - memorieswalk-network

networks:
  memorieswalk-network:
    external: true # Use the pre-created network

# No volumes section needed as we're using absolute paths
