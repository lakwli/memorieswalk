#!/bin/bash

# MemoriesWalk Database Initialization Script
# This script initializes the database with the required schema

# Exit on any error
set -e

POSTGRES_CONTAINER_NAME="memorieswalk-postgres-prod"
APP_CONTAINER_NAME="memorieswalk-prod"
SCHEMA_FILE="/opt/memorieswalk/schema.sql"

# Color output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Print banner
echo -e "${GREEN}====================================${NC}"
echo -e "${GREEN}  MemoriesWalk Database Initializer ${NC}"
echo -e "${GREEN}====================================${NC}"
echo ""

# Check if postgres container is running
if ! docker ps -q -f name=$POSTGRES_CONTAINER_NAME | grep -q .; then
    echo -e "${RED}Error: PostgreSQL container is not running${NC}"
    echo "Please run the deploy.sh script first to start all containers"
    exit 1
fi

# Check if app container is running
if ! docker ps -q -f name=$APP_CONTAINER_NAME | grep -q .; then
    echo -e "${RED}Error: Application container (memorieswalk-prod) is not running${NC}"
    echo "Please run the deploy.sh script first to start all containers"
    exit 1
fi

# Copy schema.sql to the host if it doesn't exist
if [ ! -f "$SCHEMA_FILE" ]; then
    echo -e "${YELLOW}Copying schema.sql from application container...${NC}"
    docker cp $APP_CONTAINER_NAME:/app/database/schema.sql $SCHEMA_FILE
    
    if [ ! -f "$SCHEMA_FILE" ]; then
        echo -e "${RED}Error: Could not find schema.sql in the container${NC}"
        echo "You may need to create the schema file manually"
        exit 1
    fi
fi

echo -e "${YELLOW}Initializing database with schema...${NC}"
cat $SCHEMA_FILE | docker exec -i $POSTGRES_CONTAINER_NAME psql -U node -d memorieswalk

echo -e "${GREEN}Database initialization completed successfully!${NC}"
echo ""
echo -e "${YELLOW}Your MemoriesWalk application should now be fully operational.${NC}"
